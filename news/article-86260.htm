<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://fanqiangtuijian.github.io/news/article-86260.htm" />
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>Java应用工程结构 &#8211; CN.programmer.Luxh</title>
        <meta name="description" content="分层的本质是关注点分离，隔离对下层的变化，可以简化复杂性，使得层次结构更加清晰。  1. 主流分层结构介绍 目前业界存在两种主流的应用工程结构：一种是阿里推出的《Java开发手册》中推荐的，另外一种是" />
        <link rel="icon" href="/assets/website/img/stashnode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="免费VPN翻墙推荐 节点订阅中文官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://fanqiangtuijian.github.io/news/article-86260.htm" />
    <meta property="og:site_name" content="免费VPN翻墙推荐 节点订阅中文官网" />
    <meta property="og:title" content="Java应用工程结构 &#8211; CN.programmer.Luxh" />
    <meta property="og:image" content="https://fanqiangtuijian.github.io/uploads/20240808-1/3932e95acc3f090a499b785bf7da0601.webp" />
        <meta property="og:release_date" content="2025-04-01T09:49:44" />
    <meta property="og:updated_time" content="2025-04-01T09:49:44" />
        <meta property="og:description" content="分层的本质是关注点分离，隔离对下层的变化，可以简化复杂性，使得层次结构更加清晰。  1. 主流分层结构介绍 目前业界存在两种主流的应用工程结构：一种是阿里推出的《Java开发手册》中推荐的，另外一种是" />
    
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Java应用工程结构 &#8211; CN.programmer.Luxh">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,700,700i|Raleway:300,400,500,700,800|Montserrat:300,400,700" rel="stylesheet">
    <!-- Vendor CSS Files -->
    <link href="/assets/website/js/frontend/stashnode/aos/aos.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/stashnode/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/stashnode/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/stashnode/boxicons/css/boxicons.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/stashnode/glightbox/css/glightbox.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/stashnode/swiper/swiper-bundle.min.css" rel="stylesheet">
    <!-- Template Main CSS File -->
    <link href="/assets/website/css/stashnode/style.css" rel="stylesheet">
        <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- ======= Header ======= -->
    <header id="header" class="d-flex align-items-center">
        <div class="container d-flex justify-content-between">
            <div id="logo">
                <a href="/">
                                <span>免费VPN翻墙推荐</span>
                                </a>
            </div>
            <nav id="navbar" class="navbar">
                <ul>
                                        <li><a class="nav-link" href="/">首页</a></li>
                                        <li><a class="nav-link" href="/free-nodes/">免费节点</a></li>
                                        <li><a class="nav-link" href="/paid-subscribe/">推荐机场</a></li>
                                        <li><a class="nav-link" href="/news/">新闻资讯</a></li>
                                        <li><a class="nav-link" href="/client.htm">客户端</a></li>
                                    </ul>
                <i class="bi bi-list mobile-nav-toggle"></i>
            </nav><!-- .navbar -->
        </div>
    </header><!-- End Header -->
    <main id="main">
        <!-- ======= Breadcrumbs Section ======= -->
        <section class="breadcrumbs">
            <div class="container">
                <div class="d-flex justify-content-between align-items-center">
                    <h1>Java应用工程结构 &#8211; CN.programmer.Luxh</h1>
                    <ol>
                        <li><a href="/">首页</a></li>
                        <li><a href="/news/">新闻资讯</a></li>
                        <li>正文</li>
                    </ol>
                </div>
            </div>
        </section><!-- End Breadcrumbs Section -->
        <!-- ======= About Section ======= -->
        <section id="about">
            <div class="container" data-aos="fade-up">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="Clash Node官网订阅站" data-url="https://clashnode.github.io">
                  				  				  				<blockquote> <p>分层的本质是关注点分离，隔离对下层的变化，可以简化复杂性，使得层次结构更加清晰。</p> </blockquote> <h3 id="1-主流分层结构介绍">1. 主流分层结构介绍</h3> <p>目前业界存在两种主流的应用工程结构：一种是阿里推出的《Java开发手册》中推荐的，另外一种是基于DDD(领域驱动设计)推荐的。</p> <h4 id="11-基于阿里java开发手册的分层结构">1.1 基于阿里《Java开发手册》的分层结构</h4> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/81c2b27d5708adb1cc595c1161119123.jpg" alt="Java应用工程结构 - CN.programmer.Luxh "></p> <pre><code>• 开放 API 层：可直接封装 Service 接口暴露成 RPC 接口；通过 Web 封装成 http 接口；网关控制层等。 • 终端显示层：各个端的模板渲染并执行显示的层。当前主要是 velocity 渲染，JS 渲染，JSP 渲染，移 动端展示等。 • Web 层：主要是对访问控制进行转发，各类基本参数校验，或者不复用的业务简单处理等。  • Service 层：相对具体的业务逻辑服务层。  • Manager 层：通用业务处理层，它有如下特征： 1） 对第三方平台封装的层，预处理返回结果及转化异常信息，适配上层接口。 2） 对 Service 层通用能力的下沉，如缓存方案、中间件通用处理。 3） 与 DAO 层交互，对多个 DAO 的组合复用。  • DAO 层：数据访问层，与底层 MySQL、Oracle、Hbase、OB 等进行数据交互。  • 第三方服务：包括其它部门 RPC 服务接口，基础平台，其它公司的 HTTP 接口，如淘宝开放平台、支 付宝付款服务、高德地图服务等。 • 外部数据接口：外部（应用）数据存储服务提供的接口，多见于数据迁移场景中。</code></pre> <h4 id="12-基于ddd领域驱动设计的分层结构">1.2 基于DDD(领域驱动设计)的分层结构</h4> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/73f984d11276f25bb3a10b0998fa9877.jpg" alt="Java应用工程结构 - CN.programmer.Luxh "></p> <pre><code>• 领域层：体现业务逻辑。 • 应用层：依赖领域层，根据业务对下层领域进行聚合和编排。 • 基础设施层：为其他提供技术支持。 • 用户接口层：为外部用户访问底层系统提供交互界面和数据表示。</code></pre> <h3 id="2-自己的工程结构">2. 自己的工程结构</h3> <p>基于上述两种工程结构，设计一个适合自己的Java项目分层结构。</p> <pre><code>example └─src     ├─main     │  ├─java     │  │  └─com     │  │      └─example     │  │          ├─application                 --应用层（聚合多个领域）     │  │          ├─domain                      --领域层     │  │          │  ├─order                      --订单域     │  │          │  │  ├─bo                        --业务对象     │  │          │  │  ├─constant                  --领域内局部常量     │  │          │  │  ├─controller                --控制器     │  │          │  │  ├─dto                       --数据传输对象     │  │          │  │  ├─event                     --事件     │  │          │  │  │  ├─publish                  --发布     │  │          │  │  │  └─subscribe                --订阅     │  │          │  │  ├─manager                   --通用逻辑处理     │  │          │  │  ├─repository                --存储     │  │          │  │  │  ├─entity                   --实体,对应数据库中的字段     │  │          │  │  │  └─mapper                   --mybatis mapper     │  │          │  │  └─service                   --业务层处理     │  │          │  │      └─impl                    --业务接口实现     │  │          │  └─user                       --用户域     │  │          │      ├─bo     │  │          │      ├─constant     │  │          │      ├─controller     │  │          │      ├─dto     │  │          │      ├─event     │  │          │      │  ├─publish     │  │          │      │  └─subscribe     │  │          │      ├─manager     │  │          │      ├─repository     │  │          │      │  ├─entity     │  │          │      │  └─mapper     │  │          │      └─service     │  │          │          └─impl     │  │          └─infrastructure             --基础设施层     │  │              ├─config                   --配置     │  │              ├─constant                 --全局常量     │  │              ├─handler                  --处理器     │  │              ├─interceptor              --拦截器     │  │              ├─thirdparty               --第三方     │  │              └─utils                    --工具类     │  └─resources             │      ├─mapper     │      │  ├─order     │      │  └─user     │           │           │           └─test         └─java             └─com                 └─example</code></pre> <ul> <li>接收参数和响应报文，请求以Req为后缀，响应以Resp为后缀，代码写在dto包中，比如创建订单请求和响应</li> </ul> <pre><code>/**  * 创建订单请求  */ @Data public class OrderCreateReq {      /**      * 用户id      */     private String userId;      /**      * 订单金额      */     private BigDecimal amount;      /**      * 下单的商品集合      */     private List&lt;OrderDetailReq&gt; orderDetailReqList;      @Data     public static class OrderDetailReq {          /**          * 商品id          */         private Long goodsId;         /**          * 商品数量          */         private Integer goodsNum;      } }   /**  * 创建订单响应  */ @Data public class OrderCreateResp {      /**      * 订单id      */     private String orderId; }</code></pre> <ul> <li> <p>DAO层代码放在repository中<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/04f709becb32660620b1cf9ce862780d.jpg" alt="Java应用工程结构 - CN.programmer.Luxh "></p> </li> <li> <p>业务层代码放在service和manager中，比如创建订单因为涉及到订单表和订单明细表，需要在一个事务中，所以将事务代码下沉到manager。<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/c2eb3dacacdfb92cabc521ac06543b61.jpg" alt="Java应用工程结构 - CN.programmer.Luxh "></p> </li> </ul> <pre><code>@Service public class OrderServiceImpl implements OrderService {      @Resource     private OrderManager orderManager;      @Override     public OrderCreateResp create(OrderCreateReq req) {          Order order = buildOrder(req);         List&lt;OrderDetail&gt; orderDetailList = buildOrderDetailList(order.getOrderId(), req);          orderManager.createOrder(order, orderDetailList);          OrderCreateResp resp = new OrderCreateResp();         resp.setOrderId(order.getOrderId());         return resp;     }       private Order buildOrder(OrderCreateReq req) {         Order order = new Order();         order.setOrderId(UUID.randomUUID().toString());         order.setUserId(req.getUserId());         order.setAmount(req.getAmount());         return order;     }       private List&lt;OrderDetail&gt; buildOrderDetailList(String orderId, OrderCreateReq req) {         List&lt;OrderDetail&gt; orderDetailList = new ArrayList&lt;&gt;();         for (OrderCreateReq.OrderDetailReq orderDetailReq : req.getOrderDetailReqList()) {             OrderDetail orderDetail = new OrderDetail();             orderDetail.setOrderId(orderId);             orderDetail.setGoodsId(orderDetailReq.getGoodsId());             orderDetail.setGoodsNum(orderDetailReq.getGoodsNum());             orderDetailList.add(orderDetail);         }         return orderDetailList;     } }</code></pre> <pre><code>@Component public class OrderManager {      @Resource     private OrderMapper orderMapper;      @Resource     private OrderDetailMapper orderDetailMapper;      @Transactional(propagation = Propagation.REQUIRED, rollbackFor = Exception.class)     public void createOrder(Order order, List&lt;OrderDetail&gt; orderDetailList) {         orderMapper.insert(order);         for (OrderDetail orderDetail : orderDetailList) {             orderDetailMapper.insert(orderDetail);         }     }   }</code></pre> <ul> <li>业务对象存放在bo包中，比如查询用户信息，不需要返回密码字段，则可以定义一个UserBO。<br /><img decoding="async" src="https://img2022.cnblogs.com/blog/408749/202204/408749-20220412162722864-240907768.jpg" alt="Java应用工程结构 - CN.programmer.Luxh "></li> </ul> <pre><code>@Data public class UserBO {          private String userId;          private String username;          private String nickname; }</code></pre> <ul> <li>application层做聚合编排，比如下单，既要保存订单信息，又要扣减库存，就需要对订单域和库存域进行聚合编排。</li> </ul> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-85554.htm">哈尔滨王春生有期徒刑20（哈尔滨王春山）</a></p>
                                        <p>下一个：<a href="/news/article-86261.htm">动物一针疫苗多少钱（动物疫苗多少钱一支）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-82697.htm" title="开一家动物医院需要什么手续（开动物医院什么资质）">开一家动物医院需要什么手续（开动物医院什么资质）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-31-free-v2ray.htm" title="免费VPN翻墙推荐 | 3月31日19.6M/S|免费Clash/Shadowrocket/V2ray/SSR订阅节点地址分享">免费VPN翻墙推荐 | 3月31日19.6M/S|免费Clash/Shadowrocket/V2ray/SSR订阅节点地址分享</a></li>
                        <li class="py-2"><a href="/news/article-84123.htm" title="买宠物粮食上哪个网站好（买宠物粮食的app）">买宠物粮食上哪个网站好（买宠物粮食的app）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-28-free-node-subscribe-links.htm" title="免费VPN翻墙推荐 | 3月28日22M/S|免费SSR/Shadowrocket/Clash/V2ray订阅节点地址分享">免费VPN翻墙推荐 | 3月28日22M/S|免费SSR/Shadowrocket/Clash/V2ray订阅节点地址分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-29-clash-v2ray-ss-ssr.htm" title="免费VPN翻墙推荐 | 3月29日18.5M/S|免费Clash/V2ray/Shadowrocket/SSR订阅节点地址分享">免费VPN翻墙推荐 | 3月29日18.5M/S|免费Clash/V2ray/Shadowrocket/SSR订阅节点地址分享</a></li>
                        <li class="py-2"><a href="/news/article-85553.htm" title="动物疫苗包括哪些（动物疫苗是什么）">动物疫苗包括哪些（动物疫苗是什么）</a></li>
                        <li class="py-2"><a href="/news/article-86980.htm" title="宠物用品批发商电话号码（宠物用品批发商电话号码查询）">宠物用品批发商电话号码（宠物用品批发商电话号码查询）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-30-free-subscribe-node.htm" title="免费VPN翻墙推荐 | 3月30日20.1M/S|免费SSR/Clash/Shadowrocket/V2ray订阅节点地址分享">免费VPN翻墙推荐 | 3月30日20.1M/S|免费SSR/Clash/Shadowrocket/V2ray订阅节点地址分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-2-node-share-links.htm" title="免费VPN翻墙推荐 | 4月2日21.3M/S|免费V2ray/Shadowrocket/Clash/SSR订阅节点地址分享">免费VPN翻墙推荐 | 4月2日21.3M/S|免费V2ray/Shadowrocket/Clash/SSR订阅节点地址分享</a></li>
                        <li class="py-2"><a href="/news/article-82698.htm" title="犬只领养协议模板（领养宠物的协议）">犬只领养协议模板（领养宠物的协议）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">6</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">18</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section><!-- End About Section -->
    </main><!-- End #main -->
        <!-- ======= Footer ======= -->
    <footer id="footer">
        <div class="container">
            <div class="copyright">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                免费VPN翻墙推荐 节点订阅中文官网 版权所有 Powered by WordPress
            </div>
        </div>
    </footer><!-- End Footer -->
    <a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>
    <!-- Vendor JS Files -->
    <script src="/assets/website/js/frontend/stashnode/jquery-1.9.1.min.js"></script>
    <script src="/assets/website/js/frontend/stashnode/aos/aos.js"></script>
    <script src="/assets/website/js/frontend/stashnode/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/stashnode/isotope-layout/isotope.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/stashnode/php-email-form/validate.js"></script>
    <script src="/assets/website/js/frontend/stashnode/swiper/swiper-bundle.min.js"></script>
    <!-- Template Main JS File -->
    <script src="/assets/website/js/frontend/stashnode/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>